# name: SonarQube Scanner
# description: Run SonarQube scan for a project.
# inputs:
#   projectName:
#     description: 'SonarQube Project Name'
#     required: true
#   projectKey:
#     description: 'SonarQube Project Key'
#     required: true
#   sonarHostUrl:
#     description: 'SonarQube Server URL'
#     required: true
#   sonarToken:
#     description: 'SonarQube Token'
#     required: true

# runs:
#   using: "composite"
#   steps:
#     - name: Cache SonarQube scanner
#       uses: actions/cache@v4
#       with:
#         path: .sonar/cache
#         key: sonarqube-${{ runner.os }}-${{ inputs.projectKey }}
#         restore-keys: sonarqube-

#     - name: Run Sonar Scanner
#       shell: bash
#       run: |
#         export VERSION=${{ github.run_id }}
#         sonar-scanner \
#           -Dsonar.projectName=${{ inputs.projectName }} \
#           -Dsonar.projectKey=${{ inputs.projectKey }} \
#           -Dsonar.sources=src/ \
#           -Dsonar.java.binaries=target/classes \
#           -Dsonar.host.url=${{ inputs.sonarHostUrl }} \
#           -Dsonar.token=${{ inputs.sonarToken }} \
#           -Dsonar.projectVersion=$VERSION \
#           -Dsonar.qualitygate.wait=true

name: SonarQube Maven Scan
description: Run SonarQube scan and build the project using Maven.

inputs:
  projectName:
    description: 'SonarQube Project Name'
    required: true
  projectKey:
    description: 'SonarQube Project Key'
    required: true
  sonarHostUrl:
    description: 'SonarQube Server URL'
    required: true
  sonarToken:
    description: 'SonarQube Token'
    required: true
  coverageReportPath:
    description: 'Path to the coverage report (e.g., index.html)'
    required: false

runs:
  using: "composite"
  steps:

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          maven-${{ runner.os }}-

    - name: Run Maven Build and SonarQube Scan
      shell: bash
      run: |
        mvn clean verify sonar:sonar \
          -DskipTests \
          -Dsonar.host.url=${{ inputs.sonarHostUrl }} \
          -Dsonar.login=${{ inputs.sonarToken }} \
          -Dsonar.projectName=${{ inputs.projectName }} \
          -Dsonar.projectKey=${{ inputs.projectKey }} \
          -Dsonar.coverageReportPaths=${{ inputs.coverageReportPath }} \
          -Dsonar.qualitygate.wait=true
