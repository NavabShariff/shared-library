name: SonarQube Scan
description: Run SonarQube scan and build the project using Maven.

inputs:
  language:
    description: 'Project Language (java/python/node)'
    required: true
  projectName:
    description: 'SonarQube Project Name'
    required: true
  projectKey:
    description: 'SonarQube Project Key'
    required: true
  sonarHostUrl:
    description: 'SonarQube Server URL'
    required: true
  sonarToken:
    description: 'SonarQube Token'
    required: true
  coverageReportPath:
    description: 'Path to the coverage report (e.g., index.html)'
    required: false
  qualityGateWait:
    description: 'Wait for SonarQube Quality Gate Result (true/false)'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:

    - name: Run Maven Build and SonarQube Scan
      if: ${{ inputs.language == 'java' }}
      shell: bash
      run: |
        mvn clean verify sonar:sonar \
          -DskipTests \
          -Dsonar.host.url=${{ inputs.sonarHostUrl }} \
          -Dsonar.login=${{ inputs.sonarToken }} \
          -Dsonar.projectName=${{ inputs.projectName }} \
          -Dsonar.projectKey=${{ inputs.projectKey }} \
          -Dsonar.coverage.jacoco.xmlReportPaths=${{ inputs.coverageReportPath }} \
          -Dsonar.qualitygate.wait=${{ inputs.qualityGateWait }}

    - name: Run SonarQube Scan for Python
      if: ${{ inputs.language == 'python' }}
      shell: bash
      run: |
        sonar-scanner \
          -Dsonar.projectKey=${{ inputs.projectKey }} \
          -Dsonar.projectName=${{ inputs.projectName }} \
          -Dsonar.host.url=${{ inputs.sonarHostUrl }} \
          -Dsonar.login=${{ inputs.sonarToken }} \
          -Dsonar.qualitygate.wait=${{ inputs.qualityGateWait }}

          